name: CI testing

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.8]
        cuda-version: [11.2]
        type: [cpu, gpu]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 35

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        # Note: This uses an internal pip API and may not always work
    # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"
        
    - name: Cache pip
      uses: actions/cache@v2.1.4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles(format('requirements-{0}.txt', matrix.type)) }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-
          
    - name: Install dependencies
      run: |
        pip install -r ${{ format('requirements-{0}.txt', matrix.type) }}  --upgrade --quiet --find-links https://download.pytorch.org/whl/torch_stable.html
        python --version
        pip --version
        pip list
      shell: bash
      
    - name: Install CUDA
      if:  matrix.type == gpu
      env:
        cuda: ${{ matrix.cuda-version }}
      run: |
        source ./install_cuda_ubuntu.sh
        if [[ $? -eq 0 ]]; then
          # Set paths for subsequent steps, using ${CUDA_PATH}
          echo "Adding CUDA to CUDA_PATH, PATH and LD_LIBRARY_PATH"
          echo "CUDA_PATH=${CUDA_PATH}" >> $GITHUB_ENV
          echo "${CUDA_PATH}/bin" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=${CUDA_PATH}/lib:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
        fi
      shell: bash
   
    # Specify the correct host compilers
    - name: Install gcc and g++ 
      run: |
        sudo apt-get install -y gcc g++
        
    - name: Run make
      run: |
          sh make.sh
          
    - name: Run test
      if:  matrix.type == cpu
      run: |
          cd DCN
          python testcpu.py
